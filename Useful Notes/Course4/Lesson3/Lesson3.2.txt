Differentiating between CI and CD
Continuous integration is all about the source code.

New changes to the code need to be validated, verified, exercised, worked over, massaged and squeezed to see if there are leaks. 
We do this by compiling, transpiling, linting, running unit tests, performing static analysis, checking dependencies for security vulnerabilities and other things.

Continuous deployment is all about built code and deployment.

Once the source code has been built in CI, we're ready to ship it to servers and devices either in the same network or elsewhere. 
Depending on your team's delivery process and deployment strategy, you might deploy to a staging or pre-production server for final testing or you might deploy to production right away. 
Before doing so, CD can run scripts to prepare the infrastructure, run smoke tests, and handle rollbacks and reverts if something doesn't go as planned.

